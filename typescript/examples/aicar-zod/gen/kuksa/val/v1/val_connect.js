"use strict";
//*******************************************************************************
// Copyright (c) 2022 Contributors to the Eclipse Foundation
//
// See the NOTICE file(s) distributed with this work for additional
// information regarding copyright ownership.
//
// This program and the accompanying materials are made available under the
// terms of the Apache License 2.0 which is available at
// http://www.apache.org/licenses/LICENSE-2.0
//
// SPDX-License-Identifier: Apache-2.0
//******************************************************************************
Object.defineProperty(exports, "__esModule", { value: true });
exports.VAL = void 0;
// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=ts"
// @generated from file kuksa/val/v1/val.proto (package kuksa.val.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
const val_pb_js_1 = require("./val_pb.js");
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * @generated from service kuksa.val.v1.VAL
 */
exports.VAL = {
    typeName: "kuksa.val.v1.VAL",
    methods: {
        /**
         * Get entries
         *
         * @generated from rpc kuksa.val.v1.VAL.Get
         */
        get: {
            name: "Get",
            I: val_pb_js_1.GetRequest,
            O: val_pb_js_1.GetResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * Set entries
         *
         * @generated from rpc kuksa.val.v1.VAL.Set
         */
        set: {
            name: "Set",
            I: val_pb_js_1.SetRequest,
            O: val_pb_js_1.SetResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * @generated from rpc kuksa.val.v1.VAL.StreamedUpdate
         */
        streamedUpdate: {
            name: "StreamedUpdate",
            I: val_pb_js_1.StreamedUpdateRequest,
            O: val_pb_js_1.StreamedUpdateResponse,
            kind: protobuf_1.MethodKind.BiDiStreaming,
        },
        /**
         * Subscribe to a set of entries
         *
         * Returns a stream of notifications.
         *
         * InvalidArgument is returned if the request is malformed.
         *
         * @generated from rpc kuksa.val.v1.VAL.Subscribe
         */
        subscribe: {
            name: "Subscribe",
            I: val_pb_js_1.SubscribeRequest,
            O: val_pb_js_1.SubscribeResponse,
            kind: protobuf_1.MethodKind.ServerStreaming,
        },
        /**
         * Shall return information that allows the client to determine
         * what server/server implementation/version it is talking to
         * eg. kuksa-databroker 0.5.1
         *
         * @generated from rpc kuksa.val.v1.VAL.GetServerInfo
         */
        getServerInfo: {
            name: "GetServerInfo",
            I: val_pb_js_1.GetServerInfoRequest,
            O: val_pb_js_1.GetServerInfoResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
    }
};
